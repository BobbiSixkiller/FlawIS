version: "3.4"

services:
  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    environment:
      SECRET: ${SECRET}
    depends_on:
      - users
      - conferences
      - files
      - grants
    restart: unless-stopped
    ports:
      - "5000:5000"

  users:
    build:
      context: ./users
      dockerfile: Dockerfile
    environment:
      SECRET: ${SECRET}
      MONGODB_URI: "mongodb://mongo:27017/users?replicaSet=rs0"
    depends_on:
      - rabbitmq
      - mongo
      - redis
    restart: unless-stopped
    ports:
      - "5001:5001"

  files:
    build:
      context: ./files
      dockerfile: Dockerfile
    environment:
      SECRET: ${SECRET}
      MONGODB_URI: "mongodb://mongo:27017/FLAWIS-files?replicaSet=rs0"
    depends_on:
      - rabbitmq
      - mongo
      - redis
    volumes:
      - /home/weby/Desktop/FlawIS/files/public:/usr/app/public
    restart: unless-stopped
    ports:
      - "5002:5002"

  conferences:
    build:
      context: ./conferences
      dockerfile: Dockerfile
    environment:
      SECRET: ${SECRET}
      MONGODB_URI: mongodb://mongo:27017/conferences?replicaSet=rs0
    depends_on:
      - rabbitmq
      - mongo
      - redis
    restart: unless-stopped
    ports:
      - "5003:5003"

  grants:
    build:
      context: ./grants
      dockerfile: Dockerfile
    environment:
      SECRET: ${SECRET}
      MONGODB_URI: "mongodb://mongo:27017/grants?replicaSet=rs0"
    depends_on:
      - rabbitmq
      - mongo
    restart: unless-stopped
    ports:
      - "5004:5004"

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    depends_on:
      - gateway
    restart: unless-stopped
    ports:
      - "3000:3000"

  mail:
    build:
      context: ./mail
      dockerfile: Dockerfile
    environment:
      SECRET: ${SECRET}
      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_USER: ${MAIL_USER}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      MAIL_FROM: ${MAIL_FROM}
      CLIENT_APP_URL: ${CLIENT_APP_URL}
    depends_on:
      - rabbitmq
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"

  redis:
    image: redis
    restart: unless-stopped
    ports:
      - "6379:6379"

  mongo:
    image: mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - mongo_config:/data/configdb
    entrypoint: ["/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0"]

volumes:
  mongo_data: {}
  mongo_config: {}
