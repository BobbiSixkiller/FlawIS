services:
  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    env_file:
      - ./gateway/.env
    depends_on:
      - users
      - conferences
      - files
      - grants
    # volumes:
    #   - ./gateway:/usr/app
    #   - /usr/app/node_modules
    restart: unless-stopped
    ports:
      - "5000:5000"

  users:
    build:
      context: ./users
      dockerfile: Dockerfile
    env_file:
      - ./users/.env
    depends_on:
      - rabbitmq
      - mongo
      - redis
    # volumes:
    #   - ./users:/usr/app
    #   - /usr/app/node_modules
    restart: unless-stopped
    ports:
      - "5001:5001"

  files:
    build:
      context: ./files
      dockerfile: Dockerfile
    env_file:
      - ./files/.env
    depends_on:
      - rabbitmq
      - mongo
      - redis
    volumes:
      - ./files/public:/usr/app/public
    #   - /usr/app/node_modules
    restart: unless-stopped
    ports:
      - "5002:5002"

  conferences:
    build:
      context: ./conferences
      dockerfile: Dockerfile
    env_file:
      - ./conferences/.env
    depends_on:
      - rabbitmq
      - mongo
      - redis
    # volumes:
    #   - ./conferences:/usr/app
    #   - /usr/app/node_modules
    restart: unless-stopped
    ports:
      - "5003:5003"

  grants:
    build:
      context: ./grants
      dockerfile: Dockerfile
    env_file:
      - ./grants/.env
    depends_on:
      - rabbitmq
      - mongo
    # volumes:
    #   - ./grants:/usr/app
    #   - /usr/app/node_modules
    restart: unless-stopped
    ports:
      - "5004:5004"

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    depends_on:
      - gateway
    # volumes:
    #   - ./client/:/usr/app
    #   - /usr/app/node_modules
    restart: unless-stopped
    ports:
      - "3000:3000"

  mail:
    build:
      context: ./mail
      dockerfile: Dockerfile
    env_file:
      - ./mail/.env
    depends_on:
      - rabbitmq
    # volumes:
    #   - ./mail:/usr/app
    #   - /usr/app/node_modules
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
  redis:
    image: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
  mongo:
    image: mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - mongo_config:/data/configdb
    entrypoint: ["/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0"]

volumes:
  mongo_data: {}
  mongo_config: {}
