services:
  core:
    build:
      context: ./core
      dockerfile: Dockerfile
      target: development
    command: npm run dev
    env_file:
      - ./.env
    depends_on:
      minio:
        condition: service_healthy
        restart: true
      rabbitmq:
        condition: service_healthy
        restart: true
      redis:
        condition: service_healthy
        restart: true
      mongo:
        condition: service_healthy
        restart: true
    volumes:
      - ./core:/usr/app
      - /usr/app/node_modules
    restart: unless-stopped
    ports:
      - "5001:5000"

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    command: npm run dev
    env_file:
      - ./.env
    depends_on:
      - core
    volumes:
      - ./client/:/usr/app
      - /usr/app/node_modules
    restart: unless-stopped
    ports:
      - "3000:3000"

  mail:
    build:
      context: ./mail
      dockerfile: Dockerfile
      target: development
    env_file:
      - ./.env
    command: npm run start:dev
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./mail:/usr/app
      - /usr/app/node_modules
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: root
      MINIO_ROOT_PASSWORD: Strong#Pass#2024
    command: server --console-address ":9001" /data
    healthcheck:
      test: ["CMD-SHELL", "mc ready local"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
  rabbitmq:
    image: rabbitmq:4.1.3-alpine
    restart: unless-stopped
    ports:
      - "5672:5672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping && rabbitmq-diagnostics -q status
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    environment:
      - RABBITMQ_ERLANG_COOKIE=flawis-rmq-cookie

  redis:
    image: redis:8.2-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD-SHELL", "echo 'PING' | redis-cli -h redis -x"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
  mongo:
    image: mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - mongo_config:/data/configdb
    entrypoint: ["/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0"]
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongo:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  mongo_data: {}
  mongo_config: {}
  minio_storage: {}
