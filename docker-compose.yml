services:
  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
      target: development
    command: npm run dev
    env_file:
      - ./gateway/.env
    depends_on:
      - users
      - conferences
      - files
      - grants
    volumes:
      - ./gateway:/usr/app
      - /usr/app/node_modules
    restart: unless-stopped
    ports:
      - "5000:5000"

  users:
    build:
      context: ./users
      dockerfile: Dockerfile
      target: development
    command: npm run dev
    env_file:
      - ./users/.env
    depends_on:
      - rabbitmq
      # - db
    volumes:
      - ./users:/usr/app
      - /usr/app/node_modules
    restart: unless-stopped
    ports:
      - "5001:5001"

  files:
    build:
      context: ./files
      dockerfile: Dockerfile
      target: development
    command: npm run dev
    env_file:
      - ./files/.env
    volumes:
      - ./files:/usr/app
      - /usr/app/node_modules
    restart: unless-stopped
    ports:
      - "5002:5002"

  conferences:
    build:
      context: ./conferences
      dockerfile: Dockerfile
      target: development
    command: npm run dev
    env_file:
      - ./conferences/.env
    depends_on:
      - rabbitmq
      # - db
    volumes:
      - ./conferences:/usr/app
      - /usr/app/node_modules
    restart: unless-stopped
    ports:
      - "5003:5003"

  grants:
    build:
      context: ./grants
      dockerfile: Dockerfile
      target: development
    command: npm run dev
    env_file:
      - ./grants/.env
    depends_on:
      - rabbitmq
      # - db
    volumes:
      - ./grants:/usr/app
      - /usr/app/node_modules
    restart: unless-stopped
    ports:
      - "5004:5004"

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: development
    command: npm run dev
    depends_on:
      - gateway
    volumes:
      - ./client/:/usr/app
      - /usr/app/node_modules
    restart: unless-stopped
    ports:
      - "3000:3000"

  mail:
    build:
      context: ./mail
      dockerfile: Dockerfile
      target: development
    command: npm run start:dev
    depends_on:
      - rabbitmq
    volumes:
      - ./mail:/usr/app
      - /usr/app/node_modules
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq
    ports:
      - "5672:5672"
#    db:
#     container_name: mongodb
#     image: mongo
#     restart: unless-stopped
#     environment:
#       MONGO_INITDB_DATABASE: node-app
#     ports:
#       - "27017:27017"
#     volumes:
#       - mongo_data:/data/db
#       - mongo_config:/data/configdb

# volumes:
#   mongo_data: {}
#   mongo_config: {}
