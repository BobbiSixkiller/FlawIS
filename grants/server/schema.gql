# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

directive @extends on INTERFACE | OBJECT

directive @external on FIELD_DEFINITION | OBJECT

directive @key(fields: String!) on INTERFACE | OBJECT

directive @provides(fields: String!) on FIELD_DEFINITION

directive @requires(fields: String!) on FIELD_DEFINITION

"""Budget model type"""
type Budget {
  createdAt: DateTime!
  indirect: Float!
  material: Float!
  members: [Member!]!
  salaries: Float!
  services: Float!
  travel: Float!
  updatedAt: DateTime!
  year: DateTime!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

"""Attendee model type"""
type Grant {
  budget: [Budget!]!
  createdAt: DateTime!
  end: DateTime!
  files: [String!]!
  id: ID!
  name: String!
  start: DateTime!
  updatedAt: DateTime!
}

"""GrantConnection type enabling cursor based pagination"""
type GrantConnection {
  edges: [GrantEdge]!
  pageInfo: PageInfo!
}

type GrantEdge {
  cursor: ObjectId!
  node: Grant!
}

input GrantInput {
  end: DateTime!
  files: [String!]!
  name: String!
  start: DateTime!
}

"""Member model type"""
type Member {
  createdAt: DateTime!
  hours: Float!
  member: User!
  updatedAt: DateTime!
  user: User!
}

type Mutation {
  createGrant(data: GrantInput!): Grant!
  deleteGrant(id: ObjectId!): Boolean!
  updategrant(data: GrantInput!, id: ObjectId!): Grant!
}

"""Mongo object id scalar type"""
scalar ObjectId

type PageInfo {
  endCursor: ObjectId!
  hasNextPage: Boolean!
}

type Query {
  grant(id: ObjectId!): Grant!
  grants(after: String, first: Int = 20): GrantConnection!
}

"""
User reference type from users microservice with contributed billings field
"""
type User {
  grants(year: DateTime!): Int
  hours(year: DateTime!): Int!
  id: ID!
}
