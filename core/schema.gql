# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Address {
  city: String!
  country: String!
  postal: String!
  street: String!
}

"""Billing information"""
type Billing {
  DIC: String!
  ICDPH: String!
  ICO: String!
  address: Address!
  name: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

interface IMutationResponse {
  message: String!
}

type Mutation {
  activateUser: String!
  deleteUser(id: ObjectId!): String!
  login(email: String!, password: String!): User!
  passwordReset(data: PasswordInput!): UserMutationResponse!
  register(data: RegisterInput!): UserMutationResponse!
  resendActivationLink: String!
  toggleVerifiedUser(id: ObjectId!): UserMutationResponse!
  updateUser(data: UserInput!, id: ObjectId!): UserMutationResponse!
}

"""Mongo object id scalar type"""
scalar ObjectId

type PageInfo {
  endCursor: ObjectId!
  hasNextPage: Boolean!
}

input PasswordInput {
  password: String!
}

type Query {
  forgotPassword(email: String!): String!
  me: User!
  textSearchUser(text: String!): [User!]!
  user(id: ObjectId!): User!
  users(after: ObjectId, first: Int = 20): UserConnection!
}

"""New user input data"""
input RegisterInput {
  email: String!
  name: String!
  organization: String!
  password: String!
  telephone: String!
}

"""User role inside the FLAWIS system"""
enum Role {
  Admin
  Basic
}

"""The user model entity"""
type User {
  billings: [Billing]!
  createdAt: DateTime!
  email: String!
  id: ObjectId!
  name: String!
  organization: String!
  role: Role!
  telephone: String!
  token: String!
  updatedAt: DateTime!
  verified: Boolean!
}

"""UserConnection type enabling cursor based pagination"""
type UserConnection {
  edges: [UserEdge]!
  pageInfo: PageInfo!
}

type UserEdge {
  cursor: ObjectId!
  node: User!
}

"""User update input data"""
input UserInput {
  email: String!
  name: String!
  organization: String!
  password: String
  role: Role
  telephone: String!
}

type UserMutationResponse implements IMutationResponse {
  data: User!
  message: String!
}
