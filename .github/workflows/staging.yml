name: Build and Deploy to Staging
on:
  push:
    branches:
      - staging
jobs:
  build:
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Setting up node version
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Copy MongoDB data from production
        run: |
          mongodump --uri="mongodb://mongo:27017" --out=/path/to/backup
          mongorestore --uri="mongodb://mongo:27018" /path/to/backup

      - name: Configure MinIO client and Mirror data from Production to Staging
        env:
          MINIO_ROOT_USER: ${MINIO_USER}
          MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}
        run: |
          mc alias set production http://production_minio_host:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD
          mc alias set staging http://staging_minio_host:9100 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD
          mc mirror production/data staging/data

      - name: Build and Deploy Staging
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_AUTHORITY: ${{ secrets.AZURE_AUTHORITY }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
          MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
          SECRET: ${{ secrets.SECRET }}
          MAIL_HOST: ${{ secrets.MAIL_HOST }}
          MAIL_PORT: ${{ secrets.MAIL_PORT }}
          MAIL_USER: ${{ secrets.MAIL_USER }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          MAIL_FROM: ${{ vars.MAIL_FROM }}
          RMQ_URI: ${{ vars.RMQ_URI }}
          RMQ_EXCHANGE: ${{ vars.RMQ_EXCHANGE}}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_REDIRECT_URI: ${{ vars.GOOGLE_REDIRECT_URI }}
        run: |
          docker-compose -f docker-compose.staging.yml up -d --build --remove-orphans
