# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

directive @extends on INTERFACE | OBJECT

directive @external on FIELD_DEFINITION | OBJECT

directive @key(fields: String!) on INTERFACE | OBJECT

directive @provides(fields: String!) on FIELD_DEFINITION

directive @requires(fields: String!) on FIELD_DEFINITION

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type File {
  clientSideUrl: String!
  createdAt: DateTime!
  id: ObjectId!
  name: String!
  path: String!
  serverSideUrl: String!
  type: FileType!
  updatedAt: DateTime!
  user: User!
}

"""Cursor based pagination return object type"""
type FileConnection {
  edges: [FileEdge]!
  pageInfo: FilePageInfo!
}

type FileEdge {
  cursor: ObjectId!
  node: File!
}

type FilePageInfo {
  endCursor: ObjectId!
  hasNextPage: Boolean!
}

"""Supported file types for upload mutation"""
enum FileType {
  GRANT
  IMAGE
  SUBMISSION
}

type Mutation {
  deleteFile(id: ObjectId!): File!
  uploadFile(file: Upload!, type: FileType!): File!
}

"""Mongo object id scalar type"""
scalar ObjectId

type Query {
  files(after: ObjectId, first: Int = 20): FileConnection!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  email: String!
  id: ObjectId!
}
