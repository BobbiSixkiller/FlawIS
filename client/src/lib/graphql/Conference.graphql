fragment Invoice on Invoice {
  body {
    body
    comment
    dueDate
    issueDate
    price
    type
    vat
    vatDate
  }
  issuer {
    name
    address {
      ...Address
    }
    ICO
    ICDPH
    DIC
    stampUrl
    variableSymbol
    IBAN
    SWIFT
  }
  payer {
    ...Billing
  }
}

fragment Section on Section {
  id
  conference {
    id
    slug
  }
  translations {
    sk {
      name
      topic
    }
    en {
      name
      topic
    }
  }
}

fragment Ticket on Ticket {
  id
  online
  price
  withSubmission
  translations {
    en {
      name
      description
    }
    sk {
      name
      description
    }
  }
}

fragment Conference on Conference {
  id
  slug
  translations {
    sk {
      name
      logoUrlEnv
    }
    en {
      name
      logoUrlEnv
    }
  }
  dates {
    start
    end
    regEnd
    submissionDeadline
  }
  createdAt
  updatedAt
}

fragment ConferenceRegistration on Conference {
  ...Conference
  sections {
    ...Section
  }
  tickets {
    ...Ticket
  }
}

query conferences($after: ObjectId, $first: Int) {
  conferences(after: $after, first: $first) {
    totalCount
    edges {
      cursor
      node {
        ...Conference
      }
    }
    pageInfo {
      endCursor
      hasNextPage
    }
  }
}

query conference($slug: String!) {
  conference(slug: $slug) {
    ...Conference
    sections {
      ...Section
    }
    tickets {
      ...Ticket
    }
    attending {
      ...Attendee
    }
  }
}

fragment SubmissionFiles on SubmissionConnection {
  totalCount
  edges {
    cursor
    node {
      id
      fileUrl
    }
  }
}

query conferenceSections($slug: String!, $after: ObjectId, $first: Int) {
  conference(slug: $slug) {
    id
    sections {
      ...Section
      submissions(first: $first, after: $after) {
        ...SubmissionFiles
      }
    }
  }
}

query textSearchConference($text: String!) {
  textSearchConference(text: $text) {
    ...Conference
  }
}

mutation createConference($data: ConferenceInput!) {
  createConference(data: $data) {
    message
  }
}

mutation deleteConference($id: ObjectId!) {
  deleteConference(id: $id) {
    message
    data {
      slug
      translations {
        sk {
          logoUrlEnv
        }
        en {
          logoUrlEnv
        }
      }
      billing {
        stampUrl
      }
    }
  }
}

mutation updateConferenceDates($slug: String!, $data: DatesInput!) {
  updateConferenceDates(slug: $slug, data: $data) {
    message
    data {
      slug
      translations {
        sk {
          name
        }
        en {
          name
        }
      }
    }
  }
}

mutation createSection($data: SectionInput!) {
  createSection(data: $data) {
    message
    data {
      conference {
        slug
      }
    }
  }
}

mutation updateSection($id: ObjectId!, $data: SectionInput!) {
  updateSection(id: $id, data: $data) {
    message
    data {
      conference {
        slug
      }
    }
  }
}

mutation deleteSection($id: ObjectId!) {
  deleteSection(id: $id) {
    message
    data {
      conference {
        slug
      }
    }
  }
}

mutation createTicket($slug: String!, $data: TicketInput!) {
  createTicket(slug: $slug, data: $data) {
    message
  }
}

mutation updateTicket(
  $slug: String!
  $ticketId: ObjectId!
  $data: TicketInput!
) {
  updateTicket(slug: $slug, ticketId: $ticketId, data: $data) {
    message
  }
}

mutation deleteTicket($slug: String!, $ticketId: ObjectId!) {
  deleteTicket(slug: $slug, ticketId: $ticketId) {
    message
  }
}

mutation addAttendee($data: AttendeeInput!) {
  addAttendee(data: $data) {
    message
    data {
      slug
    }
  }
}
