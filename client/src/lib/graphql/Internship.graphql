fragment Application on Intern {
  id
  user {
    id
    name
    email
    studyProgramme
    telephone
    avatarUrl
    address {
      ...Address
    }
  }
  fileUrls
  organizationFeedbackUrl
  status
  createdAt
  updatedAt
}

query internships(
  $after: ObjectId
  $first: Int
  $user: ObjectId
  $startDate: DateTimeISO
  $endDate: DateTimeISO
  $contextUserId: ObjectId
) {
  internships(
    after: $after
    first: $first
    user: $user
    startDate: $startDate
    endDate: $endDate
    contextUserId: $contextUserId
  ) {
    totalCount
    academicYears {
      academicYear
      count
    }
    edges {
      cursor
      node {
        id
        organization
        description
        applicationsCount
        academicYear
        myApplication {
          ...Application
        }
      }
    }
    pageInfo {
      hasNextPage
      endCursor
    }
  }
}

query internship($id: ObjectId!) {
  internship(id: $id) {
    id
    user
    organization
    description
    updatedAt
    createdAt
    applicationsCount
    myApplication {
      ...Application
    }
  }
}

mutation createInternship($input: InternshipInput!) {
  createInternship(input: $input) {
    message
  }
}

mutation updateInternship($id: ObjectId!, $input: InternshipInput!) {
  updateInternship(id: $id, input: $input) {
    message
    data {
      id
    }
  }
}

mutation deleteInternship($id: ObjectId!) {
  deleteInternship(id: $id) {
    message
    data {
      id
    }
  }
}

query interns(
  $after: ObjectId
  $first: Int
  $user: ObjectId
  $startDate: DateTimeISO
  $endDate: DateTimeISO
  $internship: ObjectId
  $status: [Status!]
) {
  interns(
    after: $after
    first: $first
    internship: $internship
    user: $user
    startDate: $startDate
    endDate: $endDate
    status: $status
  ) {
    totalCount
    edges {
      cursor
      node {
        ...Application
      }
    }
    pageInfo {
      endCursor
      hasNextPage
    }
  }
}

query intern($id: ObjectId!) {
  intern(id: $id) {
    ...Application
  }
}

mutation createIntern($fileUrls: [String]!, $internshipId: ObjectId!) {
  createIntern(fileUrls: $fileUrls, internshipId: $internshipId) {
    message
  }
}

mutation updateInternFiles($id: ObjectId!, $fileUrls: [String]!) {
  updateInternFiles(id: $id, fileUrls: $fileUrls) {
    message
    data {
      internship
    }
  }
}

mutation updateOrgFeedback($fileUrl: String, $id: ObjectId!) {
  updateOrgFeedback(id: $id, fileUrl: $fileUrl) {
    message
    data {
      internship
    }
  }
}

mutation deleteIntern($id: ObjectId!) {
  deleteIntern(id: $id) {
    message
    data {
      internship
    }
  }
}

mutation changeInternStatus($id: ObjectId!, $status: Status!) {
  changeInternStatus(id: $id, status: $status) {
    message
    data {
      internship
    }
  }
}
